steps:
  # Install dependencies
  - name: 'node:18'
    entrypoint: 'npm'
    args: ['ci']
    env:
      - 'NODE_ENV=production'

  # Run linting and type checks
  - name: 'node:18'
    entrypoint: 'npm'
    args: ['run', 'typecheck']

  - name: 'node:18'
    entrypoint: 'npm'
    args: ['run', 'lint:ts']

  # Compile and test smart contracts
  - name: 'node:18'
    entrypoint: 'npm'
    args: ['run', 'contracts:compile']

  - name: 'node:18'
    entrypoint: 'npm'
    args: ['run', 'test']

  # Run coverage and validate threshold
  - name: 'node:18'
    entrypoint: 'npm'
    args: ['run', 'test:coverage']

  # Build Next.js application
  - name: 'node:18'
    entrypoint: 'npm'
    args: ['run', 'build']

  # Build and tag Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/quant-ai/app:$COMMIT_SHA'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/quant-ai/app:latest'
      - '.'

  # Push Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '--all-tags', 'us-central1-docker.pkg.dev/$PROJECT_ID/quant-ai/app']

  # Deploy to Cloud Run with secrets and optimized configuration
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'quant-ai'
      - '--image'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/quant-ai/app:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'NODE_ENV=production,PROJECT_ID=$PROJECT_ID'
      - '--set-secrets'
      - 'GOOGLE_AI_API_KEY=google-ai-api-key:latest,ETHEREUM_RPC_URL=ethereum-rpc-url:latest'
      - '--cpu'
      - '2'
      - '--memory'
      - '1Gi'
      - '--min-instances'
      - '1'
      - '--max-instances'
      - '100'
      - '--concurrency'
      - '80'
      - '--timeout'
      - '300'
      - '--port'
      - '3000'

  # Deploy Firestore rules and indexes
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        npm install -g firebase-tools
        firebase deploy --only firestore:rules,firestore:indexes --project $PROJECT_ID --token $$FIREBASE_TOKEN
    secretEnv: ['FIREBASE_TOKEN']

# Store built image in Artifact Registry
images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/quant-ai/app:$COMMIT_SHA'

# Access to secret for Firebase deployment
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/firebase-token/versions/latest
      env: 'FIREBASE_TOKEN'

# Build configuration
options:
  substitution_option: 'ALLOW_LOOSE'
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 100

# Timeout for the entire build
timeout: '1800s'

# Service account for Cloud Build
serviceAccount: 'projects/$PROJECT_ID/serviceAccounts/quant-ai-deployer@$PROJECT_ID.iam.gserviceaccount.com'